{"version":3,"sources":["webpack:///main.min.js","webpack:///webpack/bootstrap 24b2a22f506e9a43c0e3?e119","webpack:///./assets/js/main.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","parentJsonpFunction","window","chunkIds","moreModules","chunkId","i","callbacks","length","installedChunks","push","apply","shift","1","e","callback","undefined","head","document","getElementsByTagName","script","createElement","type","charset","async","src","p","appendChild","m","c","Sorna","assetRoot","version","fabric_loader","resolve","fabric","Media","_insert_media_script","url","onload","getElementById","el","next_el","parentNode","insertBefore","_get_drawing_impl","scripts","loader","handler","result_id","data","container","Drawing","update","_get_image_impl","img_elem","alt","_get_svg_impl","canvas_elem","canvas","Canvas","width","height","getContext","scale","devicePixelRatio","loadSVGFromString","objects","options","selectable","shape","util","groupSVGElements","on","opts","toSVG","dl","href","encodeURIComponent","target","click","setWidth","setHeight","add","renderAll","_get_media_impls","image_impl","this","application/x-sorna-drawing","image/svg+xml","image/png","image/jpeg","image/gif","handle_all","items","result_container","media","impl","script_promises","j","insert","Promise","reject","all","then"],"mappings":"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","file":"main.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// install a JSONP callback for chunk loading\n/******/ \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n/******/ \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n/******/ \t\t// add \"moreModules\" to the modules object,\n/******/ \t\t// then flag all \"chunkIds\" as loaded and fire callback\n/******/ \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n/******/ \t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\tchunkId = chunkIds[i];\n/******/ \t\t\tif(installedChunks[chunkId])\n/******/ \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n/******/ \t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t}\n/******/ \t\tfor(moduleId in moreModules) {\n/******/ \t\t\tmodules[moduleId] = moreModules[moduleId];\n/******/ \t\t}\n/******/ \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n/******/ \t\twhile(callbacks.length)\n/******/ \t\t\tcallbacks.shift().call(null, __webpack_require__);\n/******/\n/******/ \t};\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// object to store loaded and loading chunks\n/******/ \t// \"0\" means \"already loaded\"\n/******/ \t// Array means \"loading\", array contains callbacks\n/******/ \tvar installedChunks = {\n/******/ \t\t1:0\n/******/ \t};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/ \t// This file contains only the entry chunk.\n/******/ \t// The chunk loading function for additional chunks\n/******/ \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n/******/ \t\t// \"0\" is the signal for \"already loaded\"\n/******/ \t\tif(installedChunks[chunkId] === 0)\n/******/ \t\t\treturn callback.call(null, __webpack_require__);\n/******/\n/******/ \t\t// an array means \"currently loading\".\n/******/ \t\tif(installedChunks[chunkId] !== undefined) {\n/******/ \t\t\tinstalledChunks[chunkId].push(callback);\n/******/ \t\t} else {\n/******/ \t\t\t// start chunk loading\n/******/ \t\t\tinstalledChunks[chunkId] = [callback];\n/******/ \t\t\tvar head = document.getElementsByTagName('head')[0];\n/******/ \t\t\tvar script = document.createElement('script');\n/******/ \t\t\tscript.type = 'text/javascript';\n/******/ \t\t\tscript.charset = 'utf-8';\n/******/ \t\t\tscript.async = true;\n/******/\n/******/ \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + ({}[chunkId]||chunkId) + \".min.js\";\n/******/ \t\t\thead.appendChild(script);\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__.p = Sorna.assetRoot;\n\t__webpack_require__.p = Sorna.assetRoot + 'js/';\n\t\n\twindow.Sorna = window.Sorna || { version: '0.2.0' };\n\t\n\tvar fabric_loader = function(resolve) {\n\t  __webpack_require__.e/* nsure */(2, function() {\n\t    window.fabric = __webpack_require__(27).fabric;\n\t    resolve();\n\t  });\n\t};\n\t\n\tSorna.Media = {\n\t  _insert_media_script: function(id, url, onload) {\n\t    if (document.getElementById(id))\n\t      return true;\n\t    var el, next_el = document.getElementsByTagName('script')[0];\n\t    el = document.createElement('script');\n\t    el.id = id;\n\t    el.onload = onload;\n\t    el.async = true;\n\t    el.src = url;\n\t    next_el.parentNode.insertBefore(el, next_el);\n\t    return false;\n\t  },\n\t  _get_drawing_impl: function() {\n\t    return {\n\t      scripts: [\n\t        {id:'js.common-fabric', loader:fabric_loader},\n\t        {id:'js.sorna-drawing', url:Sorna.assetRoot + 'js/drawing.min.js'}\n\t      ],\n\t      handler: function(result_id, type, data, container) {\n\t        Sorna.Drawing.update(result_id, type, data, container);\n\t      }\n\t    };\n\t  },\n\t  _get_image_impl: function() {\n\t    return {\n\t      scripts: [\n\t      ],\n\t      handler: function(result_id, type, data, container) {\n\t        var img_elem = document.getElementById(result_id);\n\t        if (!img_elem) {\n\t          img_elem = document.createElement('img');\n\t          img_elem.id = result_id;\n\t          img_elem.alt = 'generated image';\n\t          container.appendChild(img_elem);\n\t        }\n\t        // TODO: verify dataURI format?\n\t        img_elem.src = data;\n\t      }\n\t    };\n\t  },\n\t  _get_svg_impl: function() {\n\t    return {\n\t      scripts: [\n\t        {id:'js.common-fabric', loader:fabric_loader}\n\t      ],\n\t      handler: function(result_id, type, data, container) {\n\t        var canvas_elem = document.getElementById(result_id);\n\t        if (!canvas_elem) {\n\t          canvas_elem = document.createElement('canvas');\n\t          canvas_elem.id = result_id;\n\t          container.appendChild(canvas_elem);\n\t        }\n\t        var canvas = new fabric.Canvas(result_id, {width: 0, height: 0});\n\t        canvas_elem.getContext('2d').scale(window.devicePixelRatio, window.devicePixelRatio);\n\t        fabric.loadSVGFromString(data, function(objects, options) {\n\t          options.selectable = false;\n\t          var shape = fabric.util.groupSVGElements(objects, options);\n\t          canvas.on('mouse:up', function(opts) {\n\t            var data = canvas.toSVG();\n\t            var dl = document.createElement('a');\n\t            dl.href = 'data:image/svg+xml,' + encodeURIComponent(data);\n\t            dl.target = '_blank';\n\t            dl.click();\n\t          });\n\t          canvas.setWidth(shape.width || 600);\n\t          canvas.setHeight(shape.height || 600);\n\t          canvas.add(shape);\n\t          canvas.renderAll();\n\t        });\n\t      }\n\t    };\n\t  },\n\t  _get_media_impls: function() {\n\t    var image_impl = this._get_image_impl();\n\t    return {\n\t      'application/x-sorna-drawing': this._get_drawing_impl(),\n\t      'image/svg+xml': this._get_svg_impl(),\n\t      'image/png': image_impl,\n\t      'image/jpeg': image_impl,\n\t      'image/gif': image_impl\n\t    };\n\t  },\n\t  handle_all: function(items, result_id, result_container) {\n\t    for (var i = 0; i < items.length; i++) {\n\t      var media = items[i];\n\t      var impl = this._get_media_impls()[media[0]];\n\t      if (impl == undefined)\n\t        continue;\n\t      var script_promises = [];\n\t      for (var j = 0; j < impl.scripts.length; j++) {\n\t        if (impl.scripts[j].url !== undefined) {\n\t          var insert = this._insert_media_script;\n\t          script_promises.push(new Promise(function(resolve, reject) {\n\t            if (insert(impl.scripts[j].id, impl.scripts[j].url, resolve))\n\t              resolve();\n\t          }));\n\t        } else {\n\t          script_promises.push(new Promise(function(resolve, reject) {\n\t            impl.scripts[j].loader(resolve);\n\t          }));\n\t        }\n\t      }\n\t      Promise.all(script_promises).then(function() {\n\t        impl.handler(result_id + '-' + i, media[0], media[1], result_container);\n\t      });\n\t    }\n\t  }\n\t};\n\t\n\t/// vim: sts=2 sw=2 et\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** main.min.js\n **/"," \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId])\n \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n \t\twhile(callbacks.length)\n \t\t\tcallbacks.shift().call(null, __webpack_require__);\n\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// \"0\" means \"already loaded\"\n \t// Array means \"loading\", array contains callbacks\n \tvar installedChunks = {\n \t\t1:0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] === 0)\n \t\t\treturn callback.call(null, __webpack_require__);\n\n \t\t// an array means \"currently loading\".\n \t\tif(installedChunks[chunkId] !== undefined) {\n \t\t\tinstalledChunks[chunkId].push(callback);\n \t\t} else {\n \t\t\t// start chunk loading\n \t\t\tinstalledChunks[chunkId] = [callback];\n \t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\tvar script = document.createElement('script');\n \t\t\tscript.type = 'text/javascript';\n \t\t\tscript.charset = 'utf-8';\n \t\t\tscript.async = true;\n\n \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + ({}[chunkId]||chunkId) + \".min.js\";\n \t\t\thead.appendChild(script);\n \t\t}\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 24b2a22f506e9a43c0e3\n **/","'use strict';\n\n__webpack_public_path__ = Sorna.assetRoot;\n__webpack_require__.p = Sorna.assetRoot + 'js/';\n\nwindow.Sorna = window.Sorna || { version: '0.2.0' };\n\nvar fabric_loader = function(resolve) {\n  require.ensure(['fabric'], function() {\n    window.fabric = require('fabric').fabric;\n    resolve();\n  });\n};\n\nSorna.Media = {\n  _insert_media_script: function(id, url, onload) {\n    if (document.getElementById(id))\n      return true;\n    var el, next_el = document.getElementsByTagName('script')[0];\n    el = document.createElement('script');\n    el.id = id;\n    el.onload = onload;\n    el.async = true;\n    el.src = url;\n    next_el.parentNode.insertBefore(el, next_el);\n    return false;\n  },\n  _get_drawing_impl: function() {\n    return {\n      scripts: [\n        {id:'js.common-fabric', loader:fabric_loader},\n        {id:'js.sorna-drawing', url:Sorna.assetRoot + 'js/drawing.min.js'}\n      ],\n      handler: function(result_id, type, data, container) {\n        Sorna.Drawing.update(result_id, type, data, container);\n      }\n    };\n  },\n  _get_image_impl: function() {\n    return {\n      scripts: [\n      ],\n      handler: function(result_id, type, data, container) {\n        var img_elem = document.getElementById(result_id);\n        if (!img_elem) {\n          img_elem = document.createElement('img');\n          img_elem.id = result_id;\n          img_elem.alt = 'generated image';\n          container.appendChild(img_elem);\n        }\n        // TODO: verify dataURI format?\n        img_elem.src = data;\n      }\n    };\n  },\n  _get_svg_impl: function() {\n    return {\n      scripts: [\n        {id:'js.common-fabric', loader:fabric_loader}\n      ],\n      handler: function(result_id, type, data, container) {\n        var canvas_elem = document.getElementById(result_id);\n        if (!canvas_elem) {\n          canvas_elem = document.createElement('canvas');\n          canvas_elem.id = result_id;\n          container.appendChild(canvas_elem);\n        }\n        var canvas = new fabric.Canvas(result_id, {width: 0, height: 0});\n        canvas_elem.getContext('2d').scale(window.devicePixelRatio, window.devicePixelRatio);\n        fabric.loadSVGFromString(data, function(objects, options) {\n          options.selectable = false;\n          var shape = fabric.util.groupSVGElements(objects, options);\n          canvas.on('mouse:up', function(opts) {\n            var data = canvas.toSVG();\n            var dl = document.createElement('a');\n            dl.href = 'data:image/svg+xml,' + encodeURIComponent(data);\n            dl.target = '_blank';\n            dl.click();\n          });\n          canvas.setWidth(shape.width || 600);\n          canvas.setHeight(shape.height || 600);\n          canvas.add(shape);\n          canvas.renderAll();\n        });\n      }\n    };\n  },\n  _get_media_impls: function() {\n    var image_impl = this._get_image_impl();\n    return {\n      'application/x-sorna-drawing': this._get_drawing_impl(),\n      'image/svg+xml': this._get_svg_impl(),\n      'image/png': image_impl,\n      'image/jpeg': image_impl,\n      'image/gif': image_impl\n    };\n  },\n  handle_all: function(items, result_id, result_container) {\n    for (var i = 0; i < items.length; i++) {\n      var media = items[i];\n      var impl = this._get_media_impls()[media[0]];\n      if (impl == undefined)\n        continue;\n      var script_promises = [];\n      for (var j = 0; j < impl.scripts.length; j++) {\n        if (impl.scripts[j].url !== undefined) {\n          var insert = this._insert_media_script;\n          script_promises.push(new Promise(function(resolve, reject) {\n            if (insert(impl.scripts[j].id, impl.scripts[j].url, resolve))\n              resolve();\n          }));\n        } else {\n          script_promises.push(new Promise(function(resolve, reject) {\n            impl.scripts[j].loader(resolve);\n          }));\n        }\n      }\n      Promise.all(script_promises).then(function() {\n        impl.handler(result_id + '-' + i, media[0], media[1], result_container);\n      });\n    }\n  }\n};\n\n/// vim: sts=2 sw=2 et\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./assets/js/main.js\n ** module id = 0\n ** module chunks = 1\n **/"],"sourceRoot":""}